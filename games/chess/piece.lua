-- Generated by Creer at 04:13PM on December 01, 2015 UTC, git hash: '1b69e788060071d644dd7b8745dca107577844e1'
-- This is a simple class to represent the Piece object in the game. You can extend it by adding utility functions here in this file.

local class = require("joueur.utilities.class")
local GameObject = require("games.chess.gameObject")

-- <<-- Creer-Merge: requires -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
-- you can add addtional require(s) here
-- <<-- /Creer-Merge: requires -->>

--- @class Piece: A chess piece
local Piece = class(GameObject)

--- initializes a Piece with basic logic as provided by the Creer code generator
function Piece:init(...)
    GameObject.init(self, ...)

    -- The following values should get overridden when delta states are merged, but we set them here as a reference for you to see what variables this class has.

    -- When the piece has been captured (removed from the board) this is true. Otherwise false.
    self.captured = false
    -- The file (y) coordinate of the checker represented as a number [1-8].
    self.file = 0
    -- If the piece has moved from its starting position.
    self.hasMoved = false
    -- The player that controls this chess Piece.
    self.owner = nil
    -- The rank (x) coordinate of the checker represented as a letter [a-h].
    self.rank = ""
    -- The type of chess piece this is, either: 'King', 'Queen', 'Knight', 'Rook', 'Bishop', or 'Pawn'
    self.type = ""
end

--- Moves the piece from its current location to the given rank and file.
-- @param {string} rank: The rank (x) coordinate to move to. Must be [a-h].
-- @param {number} file: The file (y) coordinate to move to. Must be [1-8].
-- @param {string} promotionType: If this is a Pawn moving to the end of the board then this parameter is what to promote it to.
-- @returns <string> The standard algebraic notation (SAN) representation of the move if successful, empty string otherwise. In addition if you fail your move you lose.
function Piece:move(rank, file, promotionType)
    if promotionType == nil then
        promotionType = ""
    end

    return tostring(self:_runOnServer("move", {
        rank = rank,
        file = file,
        promotionType = promotionType,
    }))
end

-- <<-- Creer-Merge: functions -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
-- if you want to add any client side logic (such as state checking functions) this is where you can add them
-- <<-- /Creer-Merge: functions -->>

return Piece
